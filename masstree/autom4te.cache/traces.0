m4trace:configure.ac:3: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:3: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:3: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:3: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:3: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:3: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:3: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:3: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^runstatedir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^ac_configure_args$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CXXFLAGS$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^ac_ct_CXX$])
m4trace:configure.ac:13: -1- _m4_warn([obsolete], [The macro `AC_LANG_CPLUSPLUS' is obsolete.
You should run autoupdate.], [../../lib/autoconf/c.m4:252: AC_LANG_CPLUSPLUS is expanded from...
configure.ac:13: the top level])
m4trace:configure.ac:15: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^ENDIAN_BIG$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^ENDIAN_LITTLE$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^HAVE_LIBNUMA$])
m4trace:configure.ac:27: -1- AC_DEFUN([KVDB_CHECK_BUILTIN], [
    AC_CACHE_CHECK([for $1 builtin], [ac_cv_have_$1],
	[AC_LINK_IFELSE([AC_LANG_PROGRAM([$2], [])],
	    [ac_cv_have_$1=yes], [ac_cv_have_$1=no])])
    if test $ac_cv_have_$1 = yes; then
	AC_DEFINE(AS_TR_CPP([HAVE_$1]), [1], [Define if you have the $1 builtin.])
    fi
])
m4trace:configure.ac:36: -1- KVDB_CHECK_BUILTIN([__builtin_clz], [[unsigned f(unsigned x) { return __builtin_clz(x); }]])
m4trace:configure.ac:36: -1- m4_pattern_allow([^HAVE___BUILTIN_CLZ$])
m4trace:configure.ac:39: -1- KVDB_CHECK_BUILTIN([__builtin_clzl], [[unsigned long f(unsigned long x) { return __builtin_clzl(x); }]])
m4trace:configure.ac:39: -1- m4_pattern_allow([^HAVE___BUILTIN_CLZL$])
m4trace:configure.ac:42: -1- KVDB_CHECK_BUILTIN([__builtin_clzll], [[unsigned long long f(unsigned long long x) { return __builtin_clzll(x); }]])
m4trace:configure.ac:42: -1- m4_pattern_allow([^HAVE___BUILTIN_CLZLL$])
m4trace:configure.ac:45: -1- KVDB_CHECK_BUILTIN([__builtin_ctz], [[unsigned f(unsigned x) { return __builtin_ctz(x); }]])
m4trace:configure.ac:45: -1- m4_pattern_allow([^HAVE___BUILTIN_CTZ$])
m4trace:configure.ac:48: -1- KVDB_CHECK_BUILTIN([__builtin_ctzl], [[unsigned long f(unsigned long x) { return __builtin_ctzl(x); }]])
m4trace:configure.ac:48: -1- m4_pattern_allow([^HAVE___BUILTIN_CTZL$])
m4trace:configure.ac:51: -1- KVDB_CHECK_BUILTIN([__builtin_ctzll], [[unsigned long long f(unsigned long long x) { return __builtin_ctzll(x); }]])
m4trace:configure.ac:51: -1- m4_pattern_allow([^HAVE___BUILTIN_CTZLL$])
m4trace:configure.ac:54: -1- KVDB_CHECK_BUILTIN([__sync_synchronize], [[long x = 11;
    void f(long i) { long* y = &x; __sync_synchronize(); *y = i; }]])
m4trace:configure.ac:54: -1- m4_pattern_allow([^HAVE___SYNC_SYNCHRONIZE$])
m4trace:configure.ac:57: -1- KVDB_CHECK_BUILTIN([__sync_fetch_and_add], [[long f(long* x) { return __sync_fetch_and_add(x, 2L); }]])
m4trace:configure.ac:57: -1- m4_pattern_allow([^HAVE___SYNC_FETCH_AND_ADD$])
m4trace:configure.ac:60: -1- KVDB_CHECK_BUILTIN([__sync_add_and_fetch], [[long f(long* x) { return __sync_add_and_fetch(x, 2L); }]])
m4trace:configure.ac:60: -1- m4_pattern_allow([^HAVE___SYNC_ADD_AND_FETCH$])
m4trace:configure.ac:63: -1- KVDB_CHECK_BUILTIN([__sync_fetch_and_add_8], [[#include <stdint.h>
    int64_t f(int64_t* x) { return __sync_fetch_and_add(x, (int64_t) 2); }]])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE___SYNC_FETCH_AND_ADD_8$])
m4trace:configure.ac:67: -1- KVDB_CHECK_BUILTIN([__sync_add_and_fetch_8], [[#include <stdint.h>
    int64_t f(int64_t* x) { return __sync_add_and_fetch(x, (int64_t) 2); }]])
m4trace:configure.ac:67: -1- m4_pattern_allow([^HAVE___SYNC_ADD_AND_FETCH_8$])
m4trace:configure.ac:71: -1- KVDB_CHECK_BUILTIN([__sync_fetch_and_or], [[long f(long* x) { return __sync_fetch_and_or(x, 2L); }]])
m4trace:configure.ac:71: -1- m4_pattern_allow([^HAVE___SYNC_FETCH_AND_OR$])
m4trace:configure.ac:74: -1- KVDB_CHECK_BUILTIN([__sync_or_and_fetch], [[long f(long* x) { return __sync_or_and_fetch(x, 2L); }]])
m4trace:configure.ac:74: -1- m4_pattern_allow([^HAVE___SYNC_OR_AND_FETCH$])
m4trace:configure.ac:77: -1- KVDB_CHECK_BUILTIN([__sync_fetch_and_or_8], [[#include <stdint.h>
    int64_t f(int64_t* x) { return __sync_fetch_and_or(x, (int64_t) 2); }]])
m4trace:configure.ac:77: -1- m4_pattern_allow([^HAVE___SYNC_FETCH_AND_OR_8$])
m4trace:configure.ac:81: -1- KVDB_CHECK_BUILTIN([__sync_or_and_fetch_8], [[#include <stdint.h>
    int64_t f(int64_t* x) { return __sync_or_and_fetch(x, (int64_t) 2); }]])
m4trace:configure.ac:81: -1- m4_pattern_allow([^HAVE___SYNC_OR_AND_FETCH_8$])
m4trace:configure.ac:85: -1- KVDB_CHECK_BUILTIN([__sync_bool_compare_and_swap], [[bool f(long* x, long y, long z) { return __sync_bool_compare_and_swap(x, y, z); }]])
m4trace:configure.ac:85: -1- m4_pattern_allow([^HAVE___SYNC_BOOL_COMPARE_AND_SWAP$])
m4trace:configure.ac:88: -1- KVDB_CHECK_BUILTIN([__sync_bool_compare_and_swap_8], [[#include <stdint.h>
    bool f(int64_t* x, int64_t y, int64_t z) { return __sync_bool_compare_and_swap(x, y, z); }]])
m4trace:configure.ac:88: -1- m4_pattern_allow([^HAVE___SYNC_BOOL_COMPARE_AND_SWAP_8$])
m4trace:configure.ac:92: -1- KVDB_CHECK_BUILTIN([__sync_val_compare_and_swap], [[long f(long* x, long y, long z) { return __sync_val_compare_and_swap(x, y, z); }]])
m4trace:configure.ac:92: -1- m4_pattern_allow([^HAVE___SYNC_VAL_COMPARE_AND_SWAP$])
m4trace:configure.ac:95: -1- KVDB_CHECK_BUILTIN([__sync_val_compare_and_swap_8], [[#include <stdint.h>
    int64_t f(int64_t* x, int64_t y, int64_t z) { return __sync_val_compare_and_swap(x, y, z); }]])
m4trace:configure.ac:95: -1- m4_pattern_allow([^HAVE___SYNC_VAL_COMPARE_AND_SWAP_8$])
m4trace:configure.ac:99: -1- KVDB_CHECK_BUILTIN([__sync_lock_test_and_set], [[long f(long* x) { return __sync_lock_test_and_set(x, 1); }]])
m4trace:configure.ac:99: -1- m4_pattern_allow([^HAVE___SYNC_LOCK_TEST_AND_SET$])
m4trace:configure.ac:102: -1- KVDB_CHECK_BUILTIN([__sync_lock_test_and_set_val], [[long f(long* x, long y) { return __sync_lock_test_and_set(x, y); }]])
m4trace:configure.ac:102: -1- m4_pattern_allow([^HAVE___SYNC_LOCK_TEST_AND_SET_VAL$])
m4trace:configure.ac:105: -1- KVDB_CHECK_BUILTIN([__sync_lock_release_set], [[void f(long* x) { __sync_lock_release(x); }]])
m4trace:configure.ac:105: -1- m4_pattern_allow([^HAVE___SYNC_LOCK_RELEASE_SET$])
m4trace:configure.ac:123: -1- m4_pattern_allow([^HAVE_CXX_AUTO$])
m4trace:configure.ac:138: -1- m4_pattern_allow([^HAVE_CXX_CONSTEXPR$])
m4trace:configure.ac:145: -1- m4_pattern_allow([^HAVE_CXX_STATIC_ASSERT$])
m4trace:configure.ac:152: -1- m4_pattern_allow([^HAVE_CXX_RVALUE_REFERENCES$])
m4trace:configure.ac:159: -1- m4_pattern_allow([^HAVE_CXX_TEMPLATE_ALIAS$])
m4trace:configure.ac:162: -1- m4_pattern_allow([^HAVE_TYPE_TRAITS$])
m4trace:configure.ac:167: -1- m4_pattern_allow([^HAVE___HAS_TRIVIAL_COPY$])
m4trace:configure.ac:187: -1- m4_pattern_allow([^HAVE_STD_IS_TRIVIALLY_COPYABLE$])
m4trace:configure.ac:193: -1- m4_pattern_allow([^HAVE_STD_IS_RVALUE_REFERENCE$])
m4trace:configure.ac:229: -1- m4_pattern_allow([^HAVE_TCMALLOC$])
m4trace:configure.ac:232: -1- m4_pattern_allow([^HAVE_JEMALLOC$])
m4trace:configure.ac:235: -1- m4_pattern_allow([^HAVE_FLOW_MALLOC$])
m4trace:configure.ac:239: -1- m4_pattern_allow([^MALLOC_LIBS$])
m4trace:configure.ac:244: -1- AC_DEFUN([KVDB_CHECK_SAME_TYPE], [
    pushdef([KVDB_CST_VAR], [AS_TR_SH([ac_cv_have_same_type_$1_is_$2])])
    AC_CACHE_CHECK([whether $1 and $2 are the same type], KVDB_CST_VAR,
	[AC_COMPILE_IFELSE([AC_LANG_PROGRAM([$3
int f($1) {return 0;} int f($2) {return 0;}], [])],
	    [KVDB_CST_VAR=no], [KVDB_CST_VAR=yes])])
    if test $KVDB_CST_VAR = yes; then
	AC_DEFINE(AS_TR_CPP([HAVE_$1_IS_$2]), [1], [Define if $1 and $2 are the same type.])
    fi
    popdef([KVDB_CST_VAR])
])
m4trace:configure.ac:256: -1- KVDB_CHECK_SAME_TYPE([off_t], [long], [#include <stdio.h>])
m4trace:configure.ac:256: -1- m4_pattern_allow([^HAVE_OFF_T_IS_LONG$])
m4trace:configure.ac:257: -1- KVDB_CHECK_SAME_TYPE([off_t], [long long], [#include <stdio.h>])
m4trace:configure.ac:257: -1- m4_pattern_allow([^HAVE_OFF_T_IS_LONG_LONG$])
m4trace:configure.ac:258: -1- KVDB_CHECK_SAME_TYPE([int64_t], [long], [#include <stdint.h>])
m4trace:configure.ac:258: -1- m4_pattern_allow([^HAVE_INT64_T_IS_LONG$])
m4trace:configure.ac:259: -1- KVDB_CHECK_SAME_TYPE([int64_t], [long long], [#include <stdint.h>])
m4trace:configure.ac:259: -1- m4_pattern_allow([^HAVE_INT64_T_IS_LONG_LONG$])
m4trace:configure.ac:260: -1- KVDB_CHECK_SAME_TYPE([size_t], [unsigned], [#include <stdio.h>])
m4trace:configure.ac:260: -1- m4_pattern_allow([^HAVE_SIZE_T_IS_UNSIGNED$])
m4trace:configure.ac:261: -1- KVDB_CHECK_SAME_TYPE([size_t], [unsigned long], [#include <stdio.h>])
m4trace:configure.ac:261: -1- m4_pattern_allow([^HAVE_SIZE_T_IS_UNSIGNED_LONG$])
m4trace:configure.ac:262: -1- KVDB_CHECK_SAME_TYPE([size_t], [unsigned long long], [#include <stdio.h>])
m4trace:configure.ac:262: -1- m4_pattern_allow([^HAVE_SIZE_T_IS_UNSIGNED_LONG_LONG$])
m4trace:configure.ac:264: -1- m4_pattern_allow([^HAVE_LONG_LONG$])
m4trace:configure.ac:265: -1- m4_pattern_allow([^SIZEOF_SHORT$])
m4trace:configure.ac:266: -1- m4_pattern_allow([^SIZEOF_INT$])
m4trace:configure.ac:267: -1- m4_pattern_allow([^SIZEOF_LONG$])
m4trace:configure.ac:268: -1- m4_pattern_allow([^SIZEOF_LONG_LONG$])
m4trace:configure.ac:269: -1- m4_pattern_allow([^SIZEOF_VOID_P$])
m4trace:configure.ac:271: -1- m4_pattern_allow([^HAVE_DECL_GETLINE$])
m4trace:configure.ac:273: -1- m4_pattern_allow([^HAVE_TIME_H$])
m4trace:configure.ac:274: -1- m4_pattern_allow([^HAVE_DECL_CLOCK_GETTIME$])
m4trace:configure.ac:278: -1- m4_pattern_allow([^HAVE_CLOCK_GETTIME$])
m4trace:configure.ac:286: -1- m4_pattern_allow([^KVDB_ROW_TYPE_ARRAY$])
m4trace:configure.ac:288: -1- m4_pattern_allow([^KVDB_ROW_TYPE_ARRAY_VER$])
m4trace:configure.ac:290: -1- m4_pattern_allow([^KVDB_ROW_TYPE_BAG$])
m4trace:configure.ac:292: -1- m4_pattern_allow([^KVDB_ROW_TYPE_STR$])
m4trace:configure.ac:301: -1- m4_pattern_allow([^KVDB_MAX_KEY_LEN$])
m4trace:configure.ac:307: -1- m4_pattern_allow([^KVDB_MAX_ROW_LEN$])
m4trace:configure.ac:314: -1- m4_pattern_allow([^HAVE_SUPERPAGE_ENABLED$])
m4trace:configure.ac:321: -1- m4_pattern_allow([^HAVE_MEMDEBUG$])
m4trace:configure.ac:331: -1- m4_pattern_allow([^HAVE_ASSERTIONS_ENABLED$])
m4trace:configure.ac:338: -1- m4_pattern_allow([^HAVE_PRECONDITIONS_ENABLED$])
m4trace:configure.ac:340: -1- m4_pattern_allow([^HAVE_PRECONDITIONS_ENABLED$])
m4trace:configure.ac:347: -1- m4_pattern_allow([^HAVE_INVARIANTS_ENABLED$])
m4trace:configure.ac:349: -1- m4_pattern_allow([^HAVE_INVARIANTS_ENABLED$])
m4trace:configure.ac:381: -1- m4_pattern_allow([^HAVE_UNALIGNED_ACCESS$])
m4trace:configure.ac:383: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:383: -1- m4_pattern_allow([^LTLIBOBJS$])
