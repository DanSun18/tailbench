
diff --git a/xapian/kill_networked.sh b/xapian/kill_networked.sh
index 795c439..7c2515b 100755
--- a/xapian/kill_networked.sh
+++ b/xapian/kill_networked.sh
@@ -1,6 +1,6 @@
 #!/bin/bash
 
 kill -9 $(cat server.pid)
-kill -9 $(cat client.pid)
+#kill -9 $(cat client.pid)
 
 rm server.pid client.pid
diff --git a/xapian/main.cpp b/xapian/main.cpp
index 5d9bfab..3f1dba6 100755
--- a/xapian/main.cpp
+++ b/xapian/main.cpp
@@ -31,13 +31,6 @@ int main(int argc, char* argv[]) {
     unsigned numServers = 4;
     string dbPath = "db";
 
-
-    cpu_set_t cpuset;
-    CPU_ZERO(&cpuset);
-    CPU_SET(13,&cpuset);
-
-    pthread_t current_thread = thread_self();
-    pthread_setaffinity_np(current_thread, sizeof(cpu_set_t), &cpuset);
     int c;
     string optString = "n:d:r:";
     while ((c = getopt(argc, argv, optString.c_str())) != -1) {
@@ -63,9 +56,14 @@ int main(int argc, char* argv[]) {
                 break;
         }
     }
-
+    
+    cpu_set_t cpuset;
+    CPU_ZERO(&cpuset);
+    CPU_SET(2,&cpuset);
+    pthread_t thread = pthread_self();
+    int s = pthread_setaffinity_np(thread,sizeof(cpu_set_t),&cpuset);
     tBenchServerInit(numServers);
-
+    tBenchSetup_thread();
     Server::init(numReqsToProcess, numServers);
     Server** servers = new Server* [numServers];
     for (unsigned i = 0; i < numServers; i++)
@@ -79,22 +77,15 @@ int main(int argc, char* argv[]) {
         }
     }
     
-    cpu_set_t cpuset_receive_thread;
-    CPU_ZERO(&cpuset_receive_thread);
-    CPU_SET(12,&cpuset_receive_thread);
-
-    pthread_t *receive_thread = NULL;
-    pthread_create(receive_thread,NULL,Server::receive_thread,servers[numServers-1]);
-
-    pthread_setaffinity_np(*receive_thread, sizeof(cpu_set_t), &cpuset);
     Server::run(servers[numServers - 1]);
-    pthread_join(*receive_thread,NULL);
-
+    
+    tBench_join();
     if (numServers > 1) {
         for (unsigned i = 0; i < numServers - 1; i++)
             pthread_join(threads[i], NULL);
     }
-
+    
+    
     tBenchServerFinish();
 
     for (unsigned i = 0; i < numServers; i++)
diff --git a/xapian/parselatsbin.py b/xapian/parselatsbin.py
index e1255ff..5dd9821 100755
--- a/xapian/parselatsbin.py
+++ b/xapian/parselatsbin.py
@@ -1,7 +1,7 @@
 #!/usr/bin/python
 
 import numpy as np
-import matplotlib.pyplot as plt
+#import matplotlib.pyplot as plt
 import sys
 import csv 
 input_file = sys.argv[1]
@@ -14,7 +14,7 @@ with file:
 	for line in lines:
 		times = line.split(' ')
 		service_time = float(times[1])
-		latency_time = float(times[2])
+		latency_time = float(times[0]) + float(times[1])
 		service_time_list.append(service_time/1000000)
 		latency_time_list.append(latency_time/1000000)
 ##		print service_time/1000000,' ',latency_time/1000000 
@@ -57,5 +57,5 @@ for i in range(0,len(yvals_service_list)):
 		index_95 = i
 
 
-print '95th-percentile: ', sorted_latency_time_list[index_95]
-print '99th-percentile: ', sorted_latency_time_list[index_99]
+print '95th-percentile: ', sorted_service_time_list[index_95]
+print '99th-percentile: ', sorted_service_time_list[index_99]
diff --git a/xapian/run_client.sh b/xapian/run_client.sh
new file mode 100755
index 0000000..9f45857
--- /dev/null
+++ b/xapian/run_client.sh
@@ -0,0 +1,18 @@
+#!/bin/bash
+# $1 is the core number
+DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
+source ${DIR}/../configs.sh
+
+NSERVERS=1
+QPS=$3
+WARMUPREQS=1000
+
+TBENCH_QPS=${QPS} TBENCH_MINSLEEPNS=100000 TBENCH_SERVER=$2 \
+  TBENCH_TERMS_FILE=${DATA_ROOT}/xapian/terms.in TBENCH_CLIENT_THREADS=2 taskset -c $1 /home/yl408/tailbench-v0.9/xapian/xapian_networked_client &
+echo $! > client.pid
+
+wait $(cat client.pid)
+
+rm client.pid
+
+
diff --git a/xapian/run_networked.sh b/xapian/run_networked.sh
index ba62661..21c6774 100755
--- a/xapian/run_networked.sh
+++ b/xapian/run_networked.sh
@@ -12,15 +12,17 @@ echo $NSERVERS
 
 #/home/yl408/scripts/bash_scripts/turnoff_HT.sh
 TBENCH_MAXREQS=${REQUESTS} TBENCH_WARMUPREQS=${WARMUPREQS} \
- taskset -c $1  $HOME/tailbench-v0.9/xapian/xapian_networked_server -n ${NSERVERS} -d ${DATA_ROOT}/xapian/wiki \
+ taskset -c $1  /home/yl408/tailbench-v0.9/xapian/xapian_networked_server -n ${NSERVERS} -d ${DATA_ROOT}/xapian/wiki \
     -r 1000000000 &
 echo $! > server.pid
-
+cat server.pid
 sudo chrt -f -p 99 $(cat server.pid)
 # ssh yl408@clipper02 'cd ~/tailbench-v0.9/xapian/;TBENCH_QPS=600 TBENCH_MINSLEEPNS=100000 TBENCH_SERVER=10.148.54.60 TBENCH_TERMS_FILE=/home/yl408/tailbench.inputs/xapi#an/terms.in taskset -c 12-13 ./xapian_networked_client '
 
 TBENCH_QPS=${QPS} TBENCH_MINSLEEPNS=100000 TBENCH_SERVER= \
-  TBENCH_TERMS_FILE=${DATA_ROOT}/xapian/terms.in TBENCH_CLIENT_THREADS=4 taskset -c 2-9 $HOME/tailbench-v0.9/xapian/xapian_networked_client &
+
+TBENCH_TERMS_FILE=${DATA_ROOT}/xapian/terms.in TBENCH_CLIENT_THREADS=2 taskset -c 3-6 /home/yl408/tailbench-v0.9/xapian/xapian_networked_client &
+
 echo $! > client.pid
 
 sudo chrt -f -p 99 $(cat client.pid)
@@ -28,6 +30,6 @@ sudo chrt -f -p 99 $(cat client.pid)
 wait $(cat client.pid)
 
 # Clean up
-./kill_networked.sh
+#./kill_networked.sh
 #rm server.pid client.pid
 #/home/yl408/scripts/bash_scripts/turnon_HT.sh                          
diff --git a/xapian/server.cpp b/xapian/server.cpp
index 6510e8a..97b7e4e 100755
--- a/xapian/server.cpp
+++ b/xapian/server.cpp
@@ -33,7 +33,6 @@ Server::Server(int id, string dbPath)
     parser.set_stemmer(stemmer);
     parser.set_stemming_strategy(Xapian::QueryParser::STEM_SOME);
     parser.set_stopper(&stopper);
-    request_count = 0;
 }
 
 Server::~Server() {
@@ -47,33 +46,19 @@ void Server::_run() {
     while (numReqsProcessed < numReqsToProcess) {
        processRequest();
        ++numReqsProcessed;
-  //    std::cerr << numReqsProcessed << std::endl;
     }
 }
 
-void Server::receiveRequest() {
-    //const unsigned MAX_TERM_LEN = 256;
-    //char term[MAX_TERM_LEN];
-    void *termPtr;
-    size_t len = tBenchRecvReq(&termPtr);
-    request_queue.push(make_pair(termPtr,len));
-}
-
 void Server::processRequest() {
     const unsigned MAX_TERM_LEN = 256;
     char term[MAX_TERM_LEN];
-    //void* termPtr;
-    
-//    cerr << "here begin to receive request " << request_count << endl;
-   // size_t len = tBenchRecvReq(&termPtr);
-    std::pair<void *,size_t> request = request_queue.pop();
-    void* termPtr = request.first;
-    size_t len  = request.second;
+    void* termPtr;
 
+    size_t len = tBenchRecvReq(&termPtr);
     memcpy(reinterpret_cast<void*>(term), termPtr, len);
     term[len] = '\0';
-    request_count++;
-//    cerr << "here begin to process " <<request_count<<endl;
+    tBench_deleteReq();
+    //std::cerr << "reach here ! " << std::endl;
     unsigned int flags = Xapian::QueryParser::FLAG_DEFAULT;
     Xapian::Query query = parser.parse_query(term, flags);
     enquire.set_query(query);
@@ -93,7 +78,7 @@ void Server::processRequest() {
 
         if (++doccount == MAX_DOC_COUNT) break;
     }
-//    cerr <<"here finish processing " <<request_count<<endl;
+    //std::cerr << "reach here finish processing" <<std::endl;
     tBenchSendResp(reinterpret_cast<void*>(res), resLen);
 }
 
@@ -103,12 +88,6 @@ void* Server::run(void* v) {
     return NULL;
 }
 
-void *Server::receive(void *v) {
-    pthread_barrier_wait(&barrier);
-    while(numReqsProcessed < numReqsToProcess) {
-        receiveRequest();
-    }
-}
 void Server::init(unsigned long _numReqsToProcess, unsigned numServers) {
     numReqsToProcess = _numReqsToProcess;
     pthread_barrier_init(&barrier, NULL, numServers);
diff --git a/xapian/setup.sh b/xapian/setup.sh
new file mode 100755
index 0000000..f1425b4
--- /dev/null
+++ b/xapian/setup.sh
@@ -0,0 +1,8 @@
+#!/bin/bash
+DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
+source ${DIR}/../configs.sh
+
+NSERVERS=1
+QPS=$1
+WARMUPREQS=500
+REQUESTS=$2
